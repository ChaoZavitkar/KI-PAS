for (k in 1:max_iter) {
for (i in 1:n) {
# Suma prvku mimo diagonálu
sum <- sum(A[i, -i] * x_old[-i])
# Výpočet nového x_i
x_new[i] <- (b[i] - sum) / A[i, i]
}
# Kontrola konvergence
if (sqrt(sum((x_old - x_new)^2)) < tol) {
cat("Konvergovalo po", k, "iteracích.\n")
return(x_new)
}
x_old <- x_new
}
cat("Nekonvergovalo po maximálním počtu iterací.\n")
return(x_new)
}
n <- 10
x_init <- rep(0, n)
# Definice matice A
A <- matrix(numeric(100), nrow = 10, ncol = 10)
for (i in 1:10) {
for (j in 1:10) {
A[i, j] <- cos((i-1)*j) - j
}
}
# Definice vektoru y
y <- sin(1:10)
x_sol <- jacobi(A, y, x_init)
jacobi <- function(A, b, x_init, max_iter = 100) {
tol <- 1e-10
n <- nrow(A)
x_old <- x_init
x_new <- x_old
for (k in 1:max_iter) {
for (i in 1:n) {
# Suma prvku mimo diagonálu
sum <- sum(A[i, -i] * x_old[-i])
# Výpočet nového x_i
x_new[i] <- (b[i] - sum) / A[i, i]
}
# Kontrola konvergence
if (sqrt(sum((x_old - x_new)^2)) < tol) {
cat("Konvergovalo po", k, "iteracích.\n")
return(x_new)
}
x_old <- x_new
}
cat("Nekonvergovalo po maximálním počtu iterací.\n")
return(x_new)
}
n <- 10
x_init <- rep(0, n)
# Definice matice A
A <- matrix(numeric(100), nrow = 10, ncol = 10)
for (i in 1:10) {
for (j in 1:10) {
A[i, j] <- cos((i-1)*j) - j
}
}
# Definice vektoru y
y <- sin(1:10)
x_sol <- jacobi(A, y, x_init)
tol <- 1e-10
jacobi <- function(A, b, x_init, max_iter = 100) {
tol <- 1e-10
n <- nrow(A)
x_old <- x_init
x_new <- x_old
for (k in 1:max_iter) {
for (i in 1:n) {
# Suma prvku mimo diagonálu
sum <- sum(A[i, -i] * x_old[-i])
# Výpočet nového x_i
x_new[i] <- (b[i] - sum) / A[i, i]
}
# Kontrola konvergence
if (sqrt(sum((x_old - x_new)^2)) < tol) {
cat("Konvergovalo po", k, "iteracích.\n")
return(x_new)
}
x_old <- x_new
}
cat("Nekonvergovalo po maximálním počtu iterací.\n")
return(x_new)
}
n <- 10
x_init <- rep(0, n)
# Definice matice A
A <- matrix(numeric(100), nrow = 10, ncol = 10)
for (i in 1:10) {
for (j in 1:10) {
A[i, j] <- cos((i-1)*j) - j
}
}
# Definice vektoru y
y <- sin(1:10)
x_sol <- jacobi(A, y, x_init)
jacobi <- function(A, b, x_init, max_iter = 100) {
tol <- 1e-10
n <- nrow(A)
x_old <- x_init
x_new <- x_old
for (k in 1:max_iter) {
for (i in 1:n) {
# Suma prvku mimo diagonálu
sum <- sum(A[i, -i] * x_old[-i])
# Výpočet nového x_i
x_new[i] <- (b[i] - sum) / A[i, i]
}
# Kontrola konvergence
if (sqrt(sum((x_old - x_new)^2)) < tol) {
cat("Konvergovalo po", k, "iteracích.\n")
return(x_new)
}
x_old <- x_new
}
cat("Nekonvergovalo po maximálním počtu iterací.\n")
return(x_new)
}
n <- 10
x_init <- rep(0, n)
# Definice matice A
A <- matrix(numeric(100), nrow = 10, ncol = 10)
for (i in 1:10) {
for (j in 1:10) {
A[i, j] <- cos((i-1)*j) - j
}
}
# Definice vektoru y
y <- sin(1:10)
x_sol <- jacobi(A, y, x_init)
jacobi <- function(A, b, x_init, max_iter = 100) {
tol <- 1e-10
n <- nrow(A)
x_old <- x_init
x_new <- x_old
for (k in 1:max_iter) {
for (i in 1:n) {
# Suma prvku mimo diagonálu
sum <- sum(A[i, -i] * x_old[-i])
# Výpočet nového x_i
x_new[i] <- (b[i] - sum) / A[i, i]
}
x_old <- x_new
}
cat("Nekonvergovalo po maximálním počtu iterací.\n")
return(x_new)
}
n <- 10
x_init <- rep(0, n)
# Definice matice A
A <- matrix(numeric(100), nrow = 10, ncol = 10)
for (i in 1:10) {
for (j in 1:10) {
A[i, j] <- cos((i-1)*j) - j
}
}
# Definice vektoru y
y <- sin(1:10)
x_sol <- jacobi(A, y, x_init)
print(x_sol)
jacobi <- function(A, b, x_init, max_iter = 100) {
tol <- 1e-10
n <- nrow(A)
x_old <- x_init
x_new <- x_old
for (k in 1:max_iter) {
for (i in 1:n) {
# Suma prvku mimo diagonálu
sum <- sum(A[i, -i] * x_old[-i])
# Výpočet nového x_i
x_new[i] <- (b[i] - sum) / A[i, i]
}
# Kontrola konvergence
if (sqrt(sum((x_old - x_new)^2)) < tol) {
cat("Konvergovalo po", k, "iteracích.\n")
return(x_new)
}
x_old <- x_new
}
cat("Nekonvergovalo po maximálním počtu iterací.\n")
return(x_new)
}
n <- 10
x_init <- rep(0, n)
# Definice matice A
A <- matrix(numeric(100), nrow = 10, ncol = 10)
for (i in 1:10) {
for (j in 1:10) {
A[i, j] <- cos((i-1)*j) - j
}
}
# Definice vektoru y
y <- sin(1:10)
x_sol <- jacobi(A, y, x_init)
x_sol <- jacobi(A, y, x_init)
x_sol <- jacobi(A, y, x_init)
x_sol <- jacobi(A, y, x_init)
x_sol <- jacobi(A, y, x_init)
x_sol <- jacobi(A, y, x_init)
x_sol <- jacobi(A, y, x_init)
x_sol <- jacobi(A, y, x_init)
x_sol <- jacobi(A, y, x_init)
x_sol <- jacobi(A, y, x_init)
x_sol <- jacobi(A, y, x_init)
x_sol <- jacobi(A, y, x_init)
x_sol <- jacobi(A, y, x_init)
x_sol <- jacobi(A, y, x_init)
x_sol <- jacobi(A, y, x_init)
x_sol <- jacobi(A, y, x_init)
x_sol <- jacobi(A, y, x_init)
x_sol <- jacobi(A, y, x_init)
x_sol <- jacobi(A, y, x_init)
x_sol <- jacobi(A, y, x_init)
x_sol <- jacobi(A, y, x_init)
x_sol <- jacobi(A, y, x_init)
x_sol <- jacobi(A, y, x_init)
x_sol <- jacobi(A, y, x_init)
x_sol <- jacobi(A, y, x_init)
x_sol <- jacobi(A, y, x_init)
x_sol <- jacobi(A, y, x_init)
x_sol <- jacobi(A, y, x_init)
x_sol <- jacobi(A, y, x_init)
x_sol <- jacobi(A, y, x_init)
x_sol <- jacobi(A, y, x_init)
x_sol <- jacobi(A, y, x_init)
x_sol <- jacobi(A, y, x_init)
x_sol <- jacobi(A, y, x_init)
x_sol <- jacobi(A, y, x_init)
x_sol <- jacobi(A, y, x_init)
x_sol <- jacobi(A, y, x_init)
x_sol <- jacobi(A, y, x_init)
x_sol <- jacobi(A, y, x_init)
x_sol <- jacobi(A, y, x_init)
jacobi <- function(A, b, x_init, tol = 1e-10, max_iter = 100) {
n <- nrow(A)
x_old <- x_init
x_new <- x_old
for (k in 1:max_iter) {
for (i in 1:n) {
# Suma prvku mimo diagonálu
sum <- sum(A[i, -i] * x_old[-i])
# Výpočet nového x_i
x_new[i] <- (b[i] - sum) / A[i, i]
}
# Kontrola konvergence
if (sqrt(sum((x_old - x_new)^2)) < tol) {
cat("Konvergovalo po", k, "iteracích.\n")
return(x_new)
}
x_old <- x_new
}
cat("Nekonvergovalo po maximálním počtu iterací.\n")
return(x_new)
}
n <- 10
x_init <- rep(0, n)
# Definice matice A
A <- matrix(numeric(100), nrow = 10, ncol = 10)
for (i in 1:10) {
for (j in 1:10) {
A[i, j] <- cos((i-1)*j) - j
}
}
# Definice vektoru y
y <- sin(1:10)
x_sol <- jacobi(A, y, x_init)
jacobi <- function(A, b, x_init, tol = 1e-10, max_iter = 100) {
n <- nrow(A)
x_old <- x_init
x_new <- x_old
for (k in 1:max_iter) {
for (i in 1:n) {
# Suma prvku mimo diagonálu
sum_val <- sum(A[i, -i] * x_old[-i])
# Výpočet nového x_i
x_new[i] <- (b[i] - sum_val) / A[i, i]
}
# Kontrola konvergence
if (all(abs(x_old - x_new) < tol)) {
cat("Konvergovalo po", k, "iteracích.\n")
return(x_new)
}
x_old <- x_new
}
cat("Nekonvergovalo po maximálním počtu iterací.\n")
return(x_new)
}
n <- 10
x_init <- rep(0, n)
# Definice matice A
A <- matrix(numeric(100), nrow = 10, ncol = 10)
for (i in 1:10) {
for (j in 1:10) {
A[i, j] <- cos((i-1)*j) - j
}
}
# Definice vektoru y
y <- sin(1:10)
x_sol <- jacobi(A, y, x_init)
jacobi <- function(A, b, x_init, tol = 1e-10, max_iter = 100) {
n <- nrow(A)
x_old <- x_init
x_new <- x_old
for (k in 1:max_iter) {
for (i in 1:n) {
# Suma prvku mimo diagonálu
sum_val <- sum(A[i, -i] * x_old[-i])
# Výpočet nového x_i
x_new[i] <- (b[i] - sum_val) / A[i, i]
}
# Kontrola konvergence
if (all(abs(x_old - x_new) < tol)) {
cat("Konvergovalo po", k, "iteracích.\n")
return(x_new)
}
x_old <- x_new
}
cat("Nekonvergovalo po maximálním počtu iterací.\n")
return(x_new)
}
n <- 10
x_init <- rep(0, n)
# Definice matice A
A <- matrix(numeric(100), nrow = 10, ncol = 10)
for (i in 1:10) {
for (j in 1:10) {
A[i, j] <- cos((i-1)*j) - j
}
}
# Definice vektoru y
y <- sin(1:10)
x_sol <- jacobi(A, y, x_init)
jacobi <- function(A, b, x_init, tol = 1e-10, max_iter = 100) {
n <- nrow(A)
x_old <- x_init
x_new <- x_old
for (k in 1:max_iter) {
for (i in 1:n) {
# Suma prvku mimo diagonálu
sum_val <- sum(A[i, -i] * x_old[-i])
# Výpočet nového x_i
x_new[i] <- (b[i] - sum_val) / A[i, i]
}
# Kontrola konvergence
if (all(abs(x_old - x_new) < 1e-10)) {
cat("Konvergovalo po", k, "iteracích.\n")
return(x_new)
}
x_old <- x_new
}
cat("Nekonvergovalo po maximálním počtu iterací.\n")
return(x_new)
}
n <- 10
x_init <- rep(0, n)
# Definice matice A
A <- matrix(numeric(100), nrow = 10, ncol = 10)
for (i in 1:10) {
for (j in 1:10) {
A[i, j] <- cos((i-1)*j) - j
}
}
# Definice vektoru y
y <- sin(1:10)
x_sol <- jacobi(A, y, x_init)
all(abs(x_old-x_new))
return(x_new)
jacobi <- function(A, b, x_init, tol = 1e-10, max_iter = 100) {
n <- nrow(A)
x_old <- x_init
x_new <- x_old
for (k in 1:max_iter) {
for (i in 1:n) {
# Suma prvku mimo diagonálu
sum <- sum(A[i, -i] * x_old[-i])
# Výpočet nového x_i
x_new[i] <- (b[i] - sum) / A[i, i]
}
# Kontrola konvergence
if (sqrt(sum((x_old - x_new)^2)) < tol) {
cat("Konvergovalo po", k, "iteracích.\n")
return(x_new)
}
x_old <- x_new
}
cat("Nekonvergovalo po maximálním počtu iterací.\n")
return(x_new)
}
n <- 10
x_init <- rep(0, n)
# Definice matice A
A <- matrix(numeric(100), nrow = 10, ncol = 10)
for (i in 1:10) {
for (j in 1:10) {
A[i, j] <- cos((i-1)*j) - j
}
}
# Definice vektoru y
y <- sin(1:10)
x_sol <- jacobi(A, y, x_init)
jacobi <- function(A, b, x_init, tol = 1e-10, max_iter = 100) {
n <- nrow(A)
x_old <- x_init
x_new <- x_old
for (k in 1:max_iter) {
for (i in 1:n) {
# Suma prvku mimo diagonálu
sum <- sum(A[i, -i] * x_old[-i])
# Výpočet nového x_i
x_new[i] <- (b[i] - sum) / A[i, i]
}
if (is.na(x_old) || is.na(x_new) || is.na(tol)) {
stop("Chybějící hodnota v proměnné.")
}
# Kontrola konvergence
if (sqrt(sum((x_old - x_new)^2)) < tol) {
cat("Konvergovalo po", k, "iteracích.\n")
return(x_new)
}
x_old <- x_new
}
cat("Nekonvergovalo po maximálním počtu iterací.\n")
return(x_new)
}
n <- 10
x_init <- rep(0, n)
# Definice matice A
A <- matrix(numeric(100), nrow = 10, ncol = 10)
for (i in 1:10) {
for (j in 1:10) {
A[i, j] <- cos((i-1)*j) - j
}
}
# Definice vektoru y
y <- sin(1:10)
x_sol <- jacobi(A, y, x_init)
jacobi <- function(A, b, x_init, tol = 1e-10, max_iter = 100) {
n <- nrow(A)
x_old <- x_init
x_new <- x_old
for (k in 1:max_iter) {
for (i in 1:n) {
# Suma prvku mimo diagonálu
sum <- sum(A[i, -i] * x_old[-i])
# Výpočet nového x_i
x_new[i] <- (b[i] - sum) / A[i, i]
}
if (any(is.na(x_old)) || any(is.na(x_new)) || is.na(tol)) {
stop("Chybějící hodnota v proměnné.")
}
# Kontrola konvergence
if (sqrt(sum((x_old - x_new)^2)) < tol) {
cat("Konvergovalo po", k, "iteracích.\n")
return(x_new)
}
x_old <- x_new
}
cat("Nekonvergovalo po maximálním počtu iterací.\n")
return(x_new)
}
n <- 10
x_init <- rep(0, n)
# Definice matice A
A <- matrix(numeric(100), nrow = 10, ncol = 10)
for (i in 1:10) {
for (j in 1:10) {
A[i, j] <- cos((i-1)*j) - j
}
}
# Definice vektoru y
y <- sin(1:10)
x_sol <- jacobi(A, y, x_init)
print(x)
x <- solve(A, y)
print(x)
GaussLepsi <- function(A,b){
n <- nrow(A)
Ab <- cbind(A,b)
#primy chod
for(k in 1:(n-1)){
pivot <- which.max(abs(Ab[k:n,k]))+k-1
if(k != pivot){
pom <- Ab[k,]
Ab[k,] <- Ab[pivot,]
Ab[pivot,] <- pom
}
for(i in (k+1):n){
m <- Ab[i,k]/Ab[k,k]
Ab[i,(k+1):(n+1)] <- Ab[i,(k+1):(n+1)]-m*Ab[k,(k+1):(n+1)]
}
}
#zpetny chod
x <- Ab[,n+1]
x[n] <- x[n]/Ab[n,n]
for(i in (n-1):1){
x[i] <- (x[i] - sum(Ab[i,(i+1):n]*x[(i+1):n]))/Ab[i,i]
}
return(x)
}
# Definice matice A
A <- matrix(numeric(100), nrow = 10, ncol = 10)
for (i in 1:10) {
for (j in 1:10) {
A[i, j] <- cos((i-1)*j) - j
}
}
# Definice vektoru y
y <- sin(1:10)
x_sol <- GaussLepsi(A, y)
print(x_sol)
